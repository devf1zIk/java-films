-- 1. Таблица пользователей
CREATE TABLE users (
                       id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       email VARCHAR(255) NOT NULL,
                       login VARCHAR(255) NOT NULL,
                       name VARCHAR(255),
                       birthday DATE NOT NULL
);

-- 2. Таблица рейтингов MPA
CREATE TABLE mpa (
                     id INT PRIMARY KEY,
                     name VARCHAR(50) NOT NULL
);

-- 3. Таблица фильмов
CREATE TABLE films (
                       id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       name VARCHAR(255) NOT NULL,
                       description VARCHAR(200),
                       release_date DATE NOT NULL,
                       duration INT NOT NULL,
                       mpa_id INT NOT NULL,
                       CONSTRAINT fk_mpa FOREIGN KEY (mpa_id) REFERENCES mpa(id)
);

-- 4. Таблица жанров
CREATE TABLE genres (
                        id INT PRIMARY KEY,
                        name VARCHAR(50) NOT NULL
);

-- 5. Связь "фильм — жанр" (многие ко многим)
CREATE TABLE film_genres (
                             film_id INT NOT NULL,
                             genre_id INT NOT NULL,
                             PRIMARY KEY (film_id, genre_id),
                             FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
                             FOREIGN KEY (genre_id) REFERENCES genres(id)
);

-- 6. Лайки пользователей фильмам
CREATE TABLE film_likes (
                            film_id INT NOT NULL,
                            user_id INT NOT NULL,
                            PRIMARY KEY (film_id, user_id),
                            FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
                            FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- 7. Таблица друзей (односторонняя дружба)
CREATE TABLE friends (
                         user_id INT NOT NULL,
                         friend_id INT NOT NULL,
                         PRIMARY KEY (user_id, friend_id),
                         FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
                         FOREIGN KEY (friend_id) REFERENCES users(id) ON DELETE CASCADE
);
